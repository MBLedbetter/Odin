/*
SELECT * FROM PS_INV_ITEM_UOM
sp_help PS_INV_ITEM_UOM
*/
DROP PROCEDURE Odin_InsertInvItemUom


SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE Odin_InsertInvItemUom(
	@itemId varchar(18),
	@userName varchar(30)
	)
AS
BEGIN

	SET NOCOUNT ON;
	IF NOT EXISTS (SELECT * FROM PS_INV_ITEM_UOM 
                   WHERE INV_ITEM_ID = @itemId
				   )
		   BEGIN
	INSERT INTO PS_INV_ITEM_UOM(
		SETID,
		INV_ITEM_ID,
		UNIT_OF_MEASURE,
		CONVERSION_RATE,
		QTY_PRECISION,
		ROUND_RULE,
		DFLT_UOM_STOCK,
		LAST_DTTM_UPDATE,
		LAST_MAINT_OPRID,
		PACKING_WEIGHT,
		PACKING_VOLUME,
		SHIPPING_WEIGHT,
		SHIPPING_VOLUME,
		UNIT_MEASURE_WT,
		UNIT_MEASURE_VOL,
		PACKING_CD,
		PACKAGING_CD,
		CONTAINER_TYPE
			)
	VALUES(
		'SHARE',		--SETID,
		@itemId,		--INV_ITEM_ID
		'EA',			--UNIT_OF_MEASURE
		1.00000000,		--CONVERSION_RATE
		'W',			--QTY_PRECISION
		'N',			--ROUND_RULE
		'Y',			--DFLT_UOM_STOCK
		GETDATE(),		--LAST_DTTM_UPDATE
		@userName,		--LAST_MAINT_OPRID
		0.0000,			--PACKING_WEIGHT
		0.0000,			--PACKING_VOLUME
		0.0000,			--SHIPPING_WEIGHT
		0.0000,			--SHIPPING_VOLUME
		'',				--UNIT_MEASURE_WT
		'',				--UNIT_MEASURE_VOL
		'',				--PACKING_CD
		'',				--PACKAGING_CD
		''				--CONTAINER_TYPE
	)				

	END
END
GO

GRANT EXECUTE ON Odin_InsertInvItemUom TO Odin
GO